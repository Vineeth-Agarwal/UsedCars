{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/model/car.ts","webpack:///./src/app/result-page/result-page.component.css","webpack:///./src/app/result-page/result-page.component.html","webpack:///./src/app/result-page/result-page.component.ts","webpack:///./src/app/search-page/search-page.component.css","webpack:///./src/app/search-page/search-page.component.html","webpack:///./src/app/search-page/search-page.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACmB;AACA;AAE1E,IAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,sFAAmB,EAAC;IAChD,EAAC,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,sFAAmB,EAAC;IACpD,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAC;CACrD,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YACxD,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACf7B,mB;;;;;;;;;;;ACAA,iE;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACI;AACW;AAEA;AACT;AAC2B;AACA;AAiB1E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAfrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,sFAAmB;gBACnB,sFAAmB;aACpB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,qEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBqB;AACO;AAKlD;IAEE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,6BAAO,GAAP,UAAQ,IAAI;QACV,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iDAAiD,EAAE,IAAI,CAAC;IAChF,CAAC;IAED,iCAAW,GAAX,UAAY,EAAE;QACZ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qDAAqD,GAAE,EAAE,CAAC;IACjF,CAAC;IAVU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,WAAW,CAWvB;IAAD,kBAAC;CAAA;AAXuB;;;;;;;;;;;;;;ACNxB;AAAA;IASI,aAAY,MAAmB;QAAnB,oCAAmB;QAC3B,8BAA8B;QAC9B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAChC,CAAC;IACL,UAAC;AAAD,CAAC;;;;;;;;;;;;;ACbD,mB;;;;;;;;;;;ACAA,kIAAkI,kHAAkH,mLAAmL,MAAM,qDAAqD,iEAAiE,kBAAkB,kD;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAngB;AACD;AACH;AACH;AAQ3C;IAME,6BAAoB,KAAqB,EAAU,WAAwB,EAAS,QAAkB;QAAlF,UAAK,GAAL,KAAK,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAS,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAE3G,sCAAQ,GAAR;QAAA,iBAmBC;QAlBC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAC,IAAI,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAChC,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACvB,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAI,CAAC,EAAE,CAAC;iBAClC,SAAS,CAAC,UAAC,IAAQ;gBAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC7B,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,YAAY,EAAC,IAAI,CAAC;gBAC5E,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;YAC7D,CAAC,EACC,aAAG;YAEH,CAAC,CAAC;QACR,CAAC,EACC,aAAG;QAEH,CAAC,CACF;IACH,CAAC;IA3BU,mBAAmB;QAN/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;YAG3B,SAAS,EAAC,CAAC,wDAAQ,CAAC;SACrB,CAAC;yCAO2B,8DAAc,EAAuB,yDAAW,EAAmB,wDAAQ;OAN3F,mBAAmB,CA6B/B;IAAD,0BAAC;CAAA;AA7B+B;;;;;;;;;;;;ACXhC,mB;;;;;;;;;;;ACAA,wTAAwT,4iCAA4iC,KAAK,w8CAAw8C,YAAY,+JAA+J,gRAAgR,uyFAAuyF,+H;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAj+L;AACf;AACM;AACK;AAO9C;IAQE,6BAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAJpE,gBAAW,GAAG,KAAK,CAAC;QACpB,UAAK,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,CAAC;QAC/C,aAAQ,GAAG,EAAE;QAGX,IAAI,CAAC,GAAG,GAAG,IAAI,8CAAG,CAAC;QACnB,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;IAClB,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IAED,yCAAW,GAAX,UAAY,IAAI;QACd,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAC;YAC/B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,CAAC,CAAC;QACrD,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1B,CAAC;IAEH,CAAC;IAED,wCAAU,GAAV,UAAW,EAAgD;YAA9C,gBAAK,EAAE,gBAAK;QACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;IACnB,CAAC;IAED,0CAAY,GAAZ,UAAa,EAAgD;QAA7D,iBAsBC;YAtBc,gBAAK,EAAE,gBAAK;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI;QACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,0BAA0B;QAC1B,kCAAkC;QAClC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YAC7C,sCAAsC;YACxC,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;YACzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;iBAC/B,SAAS,CAAC,UAAC,IAAS;gBACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBAEjB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;gBACtB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,GAAE,IAAI,CAAC,EAAE,CAAC,CAAC;YAC7C,CAAC,EACC,eAAK;gBACH,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;YAC9B,CAAC,CAAC,CAAC;QACT,CAAC;IACH,CAAC;IAtDU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAS4B,sDAAM,EAAuB,yDAAW;OARzD,mBAAmB,CAwD/B;IAAD,0BAAC;CAAA;AAxD+B;;;;;;;;;;;;;;ACVhC;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport { ResultPageComponent } from './result-page/result-page.component';\n\nconst routes: Routes = [\n  {path: \"search\", component: SearchPageComponent},\n  {path: \"result/:id\", component: ResultPageComponent},\n  {path: \"\", redirectTo: \"/search\", pathMatch: \"full\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div>\\n<router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport { ResultPageComponent } from './result-page/result-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchPageComponent,\n    ResultPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  addUser(item){\n    return this.http.post(\"https://car-search-engine.herokuapp.com/saveCar\", item)\n  }\n\n  getUserList(id){\n    return this.http.get(\"https://car-search-engine.herokuapp.com/getCarList/\"+ id)\n  }\n}\n","export class Car {\n\n    make: string;\n    model: string;\n    year: string;\n    Type: string;\n    features: string;\n    purchaseDate: Date;\n\n    constructor(values: Object = {}) {\n        /*Constructor initialization*/\n        Object.assign(this, values);\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row justify-content-md-center\\\">\\n  <div class=\\\"col-sm-8\\\">\\n\\n    <div style=\\\"text-align:center;\\\">\\n      <h1>The input given by the User are as follows</h1>\\n      <hr>\\n      <h4>\\n        <ul>\\n      <li>{{reportObj?.make</li>\\n         <!-- <li>+ \\\" \\\"+ reportObj?.model</li>\\n        <li>          + \\\" \\\" + reportObj?.type\\n          </li> + \\\" with \\\"+ reportObj?.features+ \\\" \\\"}} on {{<li> reportObj?.purchaseDate | date : 'dd-MM-yyyy' }}</li> -->\\n      </h4>\\n    </ul>\\n      <h5>The user will get {{purchaseDiscount}}% discount</h5>\\n    </div>\\n\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService } from '../data.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-result-page',\n  templateUrl: './result-page.component.html',\n  styleUrls: ['./result-page.component.css'],\n  providers:[DatePipe]\n})\nexport class ResultPageComponent implements OnInit {\n\n  id: any;\n  reportObj: any\n  purchaseDay:any\n  purchaseDiscount:any\n  constructor(private route: ActivatedRoute, private dataService: DataService,private datePipe: DatePipe) { }\n\n  ngOnInit() {\n    console.log(this.datePipe.transform(new Date(),'dd'));\n    this.route.params.subscribe(params => {\n      this.id = params[\"id\"];\n      this.dataService.getUserList(this.id)\n        .subscribe((data:any) => {\n          console.log(data)\n          this.reportObj = data.data[0]\n          this.purchaseDay = this.datePipe.transform(this.reportObj.purchaseDate,'dd')\n          this.purchaseDiscount = this.purchaseDay % 2 == 0 ? 40 : 30\n        },\n          err => {\n\n          })\n    },\n      err => {\n\n      }\n    )\n  }\n\n}","module.exports = \"\"","module.exports = \"<div class=\\\"row justify-content-md-center\\\">\\n\\n  <div class=\\\"col-sm-8\\\">\\n    <div [ngSwitch]=\\\"step\\\">\\n      <div *ngSwitchCase=\\\"1\\\">\\n        <!-- Form step 1 -->\\n        <form novalidate (ngSubmit)=\\\"onFormNext(search)\\\" #search=\\\"ngForm\\\">\\n\\n          <div style=\\\"text-align:center;\\\">\\n            <h1>Used Car Search Engine</h1>\\n            <p>Please fill in this form</p>\\n          </div>\\n          <hr>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"make\\\">\\n              <b>Make</b>\\n            </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"car.make\\\" name=\\\"make\\\" #make=\\\"ngModel\\\" id=\\\"inputmake\\\" placeholder=\\\"Make\\\"\\n              required>\\n          </div>\\n          <!-- make error block -->\\n          <div *ngIf=\\\"(make.invalid && ( make.touched || make.dirty) ) || isSubmitted\\\" class=\\\"col-sm-6 text-danger\\\">\\n            <div *ngIf=\\\"make.errors?.required\\\">\\n              Please enter the make\\n            </div>\\n          </div>\\n\\n\\n          <!-- Select model block -->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"model\\\">\\n              <b>Model</b>\\n            </label>\\n            <select id=\\\"select\\\" class=\\\"form-control\\\" [ngModel]=\\\"car.model\\\" name=\\\"model\\\" required>\\n              <option *ngFor=\\\"let m of model\\\" [value]=\\\"m\\\"> {{ m }}\\n              </option>\\n            </select>\\n          </div>\\n\\n          <!-- Year -->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"year\\\">\\n              <b>Year</b>\\n            </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"car.year\\\" name=\\\"year\\\" #year=\\\"ngModel\\\" id=\\\"inputyear\\\" placeholder=\\\"year\\\"\\n              required>\\n          </div>\\n          <!-- year error block -->\\n          <div *ngIf=\\\"(year.invalid && ( year.touched || year.dirty) ) || isSubmitted\\\" class=\\\"col-sm-6 text-danger\\\">\\n            <div *ngIf=\\\"year.errors?.required\\\">\\n              Please enter the Year\\n            </div>\\n          </div>\\n\\n          <!-- Select status block -->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"type\\\">\\n              <b>Type</b>\\n            </label>\\n            <br>\\n            <div class=\\\"form-check form-check-inline\\\">\\n              <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"car.type\\\" type=\\\"radio\\\" name=\\\"type\\\" id=\\\"inlineRadio1\\\" value=\\\"Sedan\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"inlineRadio1\\\">Sedan</label>\\n            </div>\\n            <div class=\\\"form-check form-check-inline\\\">\\n              <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"car.type\\\" type=\\\"radio\\\" name=\\\"type\\\" id=\\\"inlineRadio2\\\" value=\\\"Coupe\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"inlineRadio2\\\">Coupe</label>\\n            </div> {{ car.type }}\\n          </div>\\n\\n          <br>\\n\\n          <div class=\\\"clearfix\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"float: right;\\\"> Next\\n            </button>\\n          </div>\\n\\n        </form>\\n      </div>\\n      <div *ngSwitchCase=\\\"2\\\">\\n        <!-- Form step 2 -->\\n        <form novalidate (ngSubmit)=\\\"onFormSubmit(basic)\\\" #basic=\\\"ngForm\\\">\\n\\n\\n          <div style=\\\"text-align:center;\\\">\\n            <h1>Booking Information</h1>\\n            <p>Please fill in this form</p>\\n          </div>\\n          <hr>\\n\\n          <!-- Features -->\\n          <div class=\\\"form-check\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"features\\\">\\n              <b>Select Features</b>\\n            </label>\\n            <br>\\n            <div class=\\\"form-check form-check-inline\\\">\\n              <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" name=\\\"features\\\" (change)=\\\"addFeatures('GPS')\\\" id=\\\"inlineCheckbox1\\\" value=\\\"option1\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"features\\\">GPS</label>\\n            </div>\\n            <div class=\\\"form-check form-check-inline\\\">\\n              <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" name=\\\"features\\\" (change)=\\\"addFeatures('Security Lock')\\\" id=\\\"inlineCheckbox2\\\"\\n                value=\\\"option2\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"features\\\">Security Lock</label>\\n            </div>\\n            <div class=\\\"form-check form-check-inline\\\">\\n              <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" name=\\\"features\\\" (change)=\\\"addFeatures('Cargo Mat')\\\" id=\\\"inlineCheckbox3\\\"\\n                value=\\\"option2\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"features\\\">Cargo Mat</label>\\n            </div>\\n            </div>\\n            <div *ngIf=\\\"(features.invalid && ( features.touched || features.dirty)) || isSubmitted\\\" class=\\\"col-sm-6 text-danger\\\">\\n              <div *ngIf=\\\"features.errors?.required\\\">\\n                Please select featurs\\n              </div>\\n            </div>\\n\\n            <!-- Select Date of Birth block -->\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"purchaseDate\\\">\\n                <b>Purchase Date</b>\\n              </label>\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" [ngModel]=\\\"car.purchaseDate\\\" name=\\\"purchaseDate\\\" #purchaseDate=\\\"ngModel\\\" id=\\\"inputpurchaseDate\\\"\\n                placeholder=\\\"Select Purchase Date\\\" required>\\n            </div>\\n            <!-- purchaseDate error block -->\\n            <div *ngIf=\\\"(purchaseDate.invalid && ( purchaseDate.touched || purchaseDate.dirty)) || isSubmitted\\\" class=\\\"col-sm-6 text-danger\\\">\\n              <div *ngIf=\\\"purchaseDate.errors?.required\\\">\\n                Please enter the Purchase Date\\n              </div>\\n            </div>\\n\\n            <br>\\n            <!-- <div class=\\\"progress form-group col-lg-6\\\">\\n                      <div class=\\\"progress-bar bg-success col-lg-6\\\" role=\\\"progressbar\\\" style=\\\"width: 50%\\\" aria-valuenow=\\\"50\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">50%</div>\\n                    </div> -->\\n            <div class=\\\"clearfix\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"float: right;\\\"> Submit\\n              </button>\\n            </div>\\n\\n        </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Car } from '../model/car';\nimport { Router } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.css']\n})\nexport class SearchPageComponent implements OnInit {\n\n  car: Car;\n  step: string;\n  isSubmitted = false;\n  model = [\"Civic\", \"Odyssey\", \"Pilot\", \"Accord\"]\n  features = []\n\n  constructor(private router: Router, private dataService: DataService) { \n    this.car = new Car;\n    this.car.model = this.model[0];\n    this.step = \"1\";\n  }\n\n  ngOnInit() {\n  }\n\n  addFeatures(item){\n    if(this.features.includes(item)){\n      this.features.splice(this.features.indexOf(item),1)\n    }else{\n      this.features.push(item)\n    }\n    \n  }\n\n  onFormNext({ value, valid }: { value: Car, valid: boolean }) {\n    this.isSubmitted = true;\n    this.step = \"2\";\n    this.car = value;\n  }\n\n  onFormSubmit({ value, valid }: { value: Car, valid: boolean }) {\n    this.isSubmitted = true\n    console.log(value)\n    // console.log(this.user);\n    // console.log('valid: ' + valid);\n    if (valid) {\n      this.car.features = this.features.toString();\n      // this.car.features = value.features;\n    this.car.purchaseDate = value.purchaseDate;\n      console.log(this.car);\n      console.log('valid: ' + valid);      \n      this.dataService.addUser(this.car)\n        .subscribe((data :any) => {\n          console.log(data)\n          \n          console.log(\"success\")\n          this.router.navigate(['/result/'+ data.id])\n        },\n          error => {\n            console.log(\"Error Occured\")\n          });\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}